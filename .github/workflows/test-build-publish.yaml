name: Docker Image CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]


jobs:
  test:
    permissions: write-all
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag-creation.outputs.new_tag }}
      pyecvl_version: ${{ steps.get_pyecvl_version.outputs.pyecvl-version }}

    steps:
    - name: workaround
      run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
    - uses: actions/checkout@v3.0.1
      with:
        fetch-depth: '0'

    - id: get_pyecvl_version
      run: echo "::set-output name=pyecvl-version::$(cat requirements.txt | grep -oP 'pyecvl==\K(\d+\.\d+\.\d+)')"

    - run: echo "/opt/conda/bin:${PATH}" >> $GITHUB_PATH
    - run: sudo apt-get -y update && sudo apt-get -y install wget gcc && wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && bash Miniconda3-latest-Linux-x86_64.sh -b -f -p /opt/conda && export PATH=/opt/conda/bin:$PATH && conda update -y conda && conda install -y conda-build && conda update -y conda-build 
    - run: conda install -c anaconda python=3.8
    - run: conda install -c dhealth -c bioconda -c conda-forge pyecvl-cpu==${{ steps.get_pyecvl_version.outputs.pyecvl-version }}
    - run: export PATH=/opt/conda/bin:$PATH && pip install pytest wheel

    - name: test
      run: make test

    - name: Bump version and push tag
      id: tag-creation
      if: ${{ github.event_name == 'push' }}
      uses: anothrNick/github-tag-action@1.36.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: false
        RELEASE_BRANCHES: master


  docker:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
          tag: [cudnn]

    env:
      BUILD_ARG: PARENT=dhealth/pylibs-toolkit:${{ needs.test.outputs.pyecvl_version }}-${{ matrix.tag }}
      EXTRA_TAGS: ${{ matrix.tag }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'

    - name: update VERSION file
      if: ${{ github.event_name == 'push' }}
      run: echo  "${{ needs.test.outputs.tag }}" > VERSION

    - name: mock VERSION file
      if: ${{ github.event_name != 'push' }}
      run: echo  "dev" > VERSION
    - name: set docker repo
      shell: bash
      run: echo "crs4" > docker/repo.txt


    - name: build  docker images
      run: make docker skip_test=true

    - name: Login to Docker Hub
      if: ${{ github.event_name == 'push' }}
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: push  docker images
      if: ${{ github.event_name == 'push' }}
      run: make docker-push skip_test=true


